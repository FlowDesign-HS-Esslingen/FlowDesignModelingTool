<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--  Template für die Menuitems die auf der obersten Ebene sind und die EIN Submenu enthalten FERTIG  -->
    <ControlTemplate x:Key="TopLevelHeaderTemplate" TargetType="MenuItem">
        <!--  TODO (JS): Setzen - TextBlock.FontFamily, TextBlock.FontSize, TextBlock.Foreground  -->
        <Border x:Name="ItemBorder">
            <Grid>
                <ContentPresenter Margin="{TemplateBinding Margin}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />

                <Popup x:Name="SubMenu"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       PopupAnimation="Fade">
                    <!--  TODO (JS): Farbe setzen - Background, BorderBrush, TextBlock.Foreground  -->
                    <Border Name="SubmenuBorder"
                            Background="White"
                            BorderBrush="Black"
                            BorderThickness="1"
                            SnapsToDevicePixels="True"
                            TextBlock.Foreground="Black">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--  TODO (JS): Farbe setzen  -->
                <Setter TargetName="ItemBorder" Property="Background" Value="LightGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Template für die Menuitems die auf der obersten Ebene sind und die KEIN Submenu enthalten FERTIG  -->
    <ControlTemplate x:Key="TopLevelItemTemplate" TargetType="MenuItem">
        <Border x:Name="ItemBorder"
                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                TextBlock.FontSize="{TemplateBinding FontSize}"
                TextBlock.Foreground="{TemplateBinding Foreground}">
            <Grid>
                <ContentPresenter Margin="{TemplateBinding Margin}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--  TODO (JS): Farbe setzen  -->
                <Setter TargetName="ItemBorder" Property="Background" Value="LightGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Template für die Menuitems die in einem Submenu sind und die KEIN Submenu enthalten FERTIG  -->
    <ControlTemplate x:Key="SubmenuItemTemplate" TargetType="MenuItem">
        <Border Name="Border" Padding="0 2 0 2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="14" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon"
                                  Margin="0,0,10,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />

                <!--  Item Checkbox  -->
                <Border Name="Check"
                        Width="13"
                        Height="13"
                        Margin="6,0,6,0"
                        Background="Violet"
                        BorderBrush="Violet"
                        BorderThickness="1"
                        Visibility="Collapsed">
                    <Path Name="CheckMark"
                          Width="7"
                          Height="7"
                          Data="M 0 0 L 7 7 M 0 7 L 7 0"
                          SnapsToDevicePixels="False"
                          Stroke="Black"
                          StrokeThickness="2"
                          Visibility="Hidden" />
                </Border>
                <!--  Item Checkbox ENDE  -->

                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                <TextBlock Name="InputGestureText"
                           Grid.Column="2"
                           Margin="25 0 0 0"
                           VerticalAlignment="Center"
                           Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--  TODO (JS): Farbe setzen - Background  -->
                <Setter TargetName="Border" Property="Background" Value="LightGray" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Template für die Menuitems die in einem Submenu sind und die EIN Submenu enthalten FERTIG  -->
    <ControlTemplate x:Key="SubmenuHeaderTemplate" TargetType="MenuItem">
        <Border Name="Border"
                Padding="0 2 0 2"
                TextBlock.FontFamily="{DynamicResource DefaultFont}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="14" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon"
                                  Margin="0,0,10,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                <Popup Name="Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="2"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       Placement="Right"
                       PopupAnimation="Fade">
                    <!--  TODO (JS): Farbe setzen - Background, BorderBrush  -->
                    <Border Name="SubmenuBorder"
                            Background="Gray"
                            BorderBrush="Black"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Margin="5,2,2,2"
                           DockPanel.Dock="Right"
                           Text="{TemplateBinding InputGestureText}" />
                <Path Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Fill="{DynamicResource MenuBarSubMenuArrow}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--  TODO (JS): Farbe setzen - Background  -->
                <Setter TargetName="Border" Property="Background" Value="LightGray" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Margin" Value="5 3 2 3" />
        <Setter Property="Foreground" Value="{DynamicResource MenuBarTextColor}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{DynamicResource TopLevelHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{DynamicResource TopLevelItemTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource SubmenuHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{DynamicResource SubmenuItemTemplate}" />
            </Trigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>